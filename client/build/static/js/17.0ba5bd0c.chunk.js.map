{"version":3,"sources":["pages/cart/cartPage.js"],"names":["RootStyle","styled","padding","theme","spacing","textAlign","Claim","useCart","products","updateCart","totalPrice","maxWidth","sx","fontSize","fontStyle","mb","direction","justifyContent","href","width","p","variant","map","index","Fragment","alignItems","src","alt","style","height","name","type","onChange","e","count","id","JSON","parse","localStorage","getItem","result","filter","console","log","Number","setItem","stringify","handleChange","target","value","defaultValue","onClick","newProducts","arr","a","arrayRemoe","handleRemove","price","container","mt","item","xs","md","label","fullWidth","multiline","rows"],"mappings":"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","file":"static/js/17.0ba5bd0c.chunk.js","sourcesContent":["// material\r\nimport React from \"react\"\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Grid, Container, Typography, Stack, Button, TextField, Divider } from '@material-ui/core';\r\nimport useCart from \"hooks/useCart\"\r\n\r\n// import ReactImageZoom from 'react-image-zoom';\r\n// import { MotionInView, varFadeInUp, varFadeInDown, varFadeInLeft, varFadeInRight } from '../../animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(20, 0),\r\n  textAlign: \"center\"\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Claim() {\r\n  const { products, updateCart, totalPrice } = useCart()\r\n\r\n  const arrayRemoe = (arr, id) => {\r\n    return arr.filter((a) => {\r\n      return a.id !== id\r\n    })\r\n  }\r\n\r\n  const handleChange = (count, id) => {\r\n    const products = JSON.parse(localStorage.getItem('products'))\r\n    const result = products.filter(p => p.id === id)\r\n    console.log(\"count of result=>\", result)\r\n    result[0].count = Number(count)\r\n    localStorage.setItem('products', JSON.stringify(products))\r\n\r\n    updateCart(products)\r\n  }\r\n\r\n  const handleRemove = (id) => {\r\n    console.log('handleRemove=>', id)\r\n    const products = JSON.parse(localStorage.getItem('products'))\r\n    const newProducts = arrayRemoe(products, id)\r\n    \r\n    localStorage.setItem('products', JSON.stringify(newProducts))\r\n    updateCart(newProducts)\r\n  }\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography sx={{ fontSize: \"30px\", fontStyle: 'Poppins' }} mb={3}>\r\n          Your Shopping Cart\r\n        </Typography>\r\n        <Stack direction=\"row\" justifyContent={'center'} spacing={5} mb={3}>\r\n          <Button href=\"/cart\" sx={{ width: '200px', p: 1.5 }} variant=\"outlined\">\r\n            Update\r\n          </Button>\r\n          <Button href=\"/checkout\" sx={{ width: '200px', p: 1.5 }} variant=\"contained\">\r\n            Checkout →\r\n          </Button>\r\n        </Stack>\r\n        {/* Products list */}\r\n        {\r\n          products && products.map((p, index) => (\r\n            <React.Fragment key={index}>\r\n              <Stack direction=\"row\" justifyContent={\"space-between\"}>\r\n                <Stack direction=\"row\" alignItems={'center'}>\r\n                  <img src=\"https://cdn.shopify.com/s/files/1/0263/8364/6794/products/bao_bh9_matte_black_01_medium.jpg?v=1567095523\" alt=\"head1\" style={{ width: '100px', height: '100px' }} />\r\n                  <Stack alignItems={'flex-start'}>\r\n                    <Typography sx={{ fontStyle: \"Poppins\", fontSize: '20px' }}>{p.name}</Typography>\r\n                    <Typography sx={{ fontStyle: \"Poppins\", fontSize: '15px' }}>argilla bright</Typography>\r\n                  </Stack>\r\n                </Stack>\r\n                <Stack direction={'row'} spacing={5} alignItems={'center'}>\r\n                  {/* Qty */}\r\n                  <Stack direction=\"row\" alignItems={'center'} spacing={1}>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      onChange={\r\n                        (e) => {\r\n                          handleChange(e.target.value, p.id)\r\n                        }\r\n                      }\r\n                      defaultValue={p.count}\r\n                    />\r\n                    <Button variant=\"outlined\" sx={{ height: '55px' }} onClick={() => {\r\n                      handleRemove(p.id)\r\n                    }}>X</Button>\r\n                  </Stack>\r\n                  {/* Price */}\r\n                  <Stack alignItems={'flex-end'}>\r\n                    <Typography sx={{ fontStyle: \"Poppins\", fontSize: '20px' }}>{p.count} x ${p.price} USD</Typography>\r\n                    <Typography sx={{ fontStyle: \"Poppins\", fontSize: '15px' }}>${p.count * p.price} USD</Typography>\r\n                  </Stack>\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n        {/* Comments adn buttons */}\r\n\r\n        <Grid container spacing={5} mt={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack alignItems={'flex-start'} spacing={2}>\r\n              <Typography sx={{\r\n                fontStyle: 'Poppins',\r\n                fontSize: '15px'\r\n              }}>\r\n                Add a note to your order\r\n              </Typography>\r\n              <TextField\r\n                label=\"Note\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack justifyContent=\"space-between\" spacing={13}>\r\n              <Stack direction={'row'} justifyContent={'space-between'} alignItems=\"center\">\r\n                <Typography sx={{\r\n                  fontStyle: 'Poppins',\r\n                  fontSize: '15px'\r\n                }}>\r\n                  Total\r\n                </Typography>\r\n                <Typography sx={{\r\n                  fontStyle: 'Poppins',\r\n                  fontSize: '20px'\r\n                }}>\r\n                  ${totalPrice} USD\r\n                </Typography>\r\n              </Stack>\r\n              {/* Checkout */}\r\n              <Stack spacing={1}>\r\n                <Typography sx={{\r\n                  fontStyle: 'Poppins',\r\n                  fontSize: '12px',\r\n                  textAlign: 'right',\r\n                }}>\r\n                  Shipping & taxes calculated at checkout\r\n                </Typography>\r\n                <Stack direction=\"row\" justifyContent={'space-between'}>\r\n                  <Button sx={{ width: '200px', p: 1.5 }} variant=\"outlined\">\r\n                    Update\r\n                  </Button>\r\n                  <Button href=\"/checkout\" sx={{ width: '200px', p: 1.5 }} variant=\"contained\">\r\n                    Checkout →\r\n                  </Button>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}